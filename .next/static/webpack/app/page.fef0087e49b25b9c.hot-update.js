"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/sections/scene/cabinet-plates/InteriorPlates.tsx":
/*!**************************************************************!*\
  !*** ./src/sections/scene/cabinet-plates/InteriorPlates.tsx ***!
  \**************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteriorPlates: function() { return /* binding */ InteriorPlates; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/store */ \"(app-pages-browser)/./src/store/index.ts\");\n/* harmony import */ var _utils_utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/utilities */ \"(app-pages-browser)/./src/utils/utilities.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _plates_BackPanel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./plates/BackPanel */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/BackPanel.tsx\");\n/* harmony import */ var _plates_Door__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./plates/Door */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/Door.tsx\");\n/* harmony import */ var _plates_Drawer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./plates/Drawer */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/Drawer.tsx\");\n/* harmony import */ var _plates_MiddlePlate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./plates/MiddlePlate */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/MiddlePlate.tsx\");\n/* harmony import */ var _plates_SpacePlane__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./plates/SpacePlane */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/SpacePlane.tsx\");\n/* harmony import */ var _plates_Tools__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./plates/Tools */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/Tools.tsx\");\n/* harmony import */ var _plates_VerticalDivider__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./plates/VerticalDivider */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/VerticalDivider.tsx\");\n/* harmony import */ var _plates_VerticalPlate__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./plates/VerticalPlate */ \"(app-pages-browser)/./src/sections/scene/cabinet-plates/plates/VerticalPlate.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n// Function to apply gradient style to columns\nconst applyGradientStyle = (columns, cabinetSize, cabinetLegs)=>{\n    const { totalWidth, totalHeight } = cabinetSize;\n    const legHeight = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getBottomHeight)(cabinetLegs);\n    const cabinetHeight = totalHeight - legHeight - 2 * _utils_utilities__WEBPACK_IMPORTED_MODULE_2__.PLATE_THICKNESS;\n    const startPosY = legHeight + _utils_utilities__WEBPACK_IMPORTED_MODULE_2__.PLATE_THICKNESS;\n    // Create a copy of columns to modify\n    const gradientColumns = [\n        ...columns\n    ];\n    // Min and max width constraints\n    const minWidth = 0.2;\n    const maxWidth = 1.0;\n    // Total available width to distribute\n    const totalAvailableWidth = totalWidth;\n    // Number of columns\n    const columnCount = gradientColumns.length;\n    // Generate varied widths for gradient effect\n    // We'll create a gradient from narrower to wider columns\n    let remainingWidth = totalAvailableWidth;\n    for(let i = 0; i < columnCount; i++){\n        // Calculate a width that gradually increases\n        // First columns narrower, last columns wider\n        const gradientFactor = 0.7 + i / (columnCount - 1) * 0.6; // Range from 0.7 to 1.3\n        // Base width if all columns were equal\n        const baseWidth = totalAvailableWidth / columnCount;\n        // Apply gradient factor to create variation\n        let columnWidth = baseWidth * gradientFactor;\n        // Ensure width is within constraints\n        columnWidth = Math.max(minWidth, Math.min(maxWidth, columnWidth));\n        // Adjust for last column to ensure total width is maintained\n        if (i === columnCount - 1) {\n            columnWidth = remainingWidth;\n        }\n        // Update column width\n        gradientColumns[i].width = columnWidth;\n        // Reduce remaining width\n        remainingWidth -= columnWidth;\n    }\n    // Recalculate positions based on new widths\n    let currentX = -totalWidth / 2;\n    for(let i = 0; i < columnCount; i++){\n        const column = gradientColumns[i];\n        const halfWidth = column.width / 2;\n        // Update column position\n        column.posX = currentX + halfWidth;\n        // Apply varied layouts based on position in the gradient\n        // This creates a pattern of different layouts across columns\n        // Clear existing layouts\n        column.doors = [];\n        column.drawers = [];\n        column.dividers = [];\n        column.isDivide = false;\n        // Determine layout type based on position in gradient\n        // 0: open cell, 1: door, 2: drawer, 3: divided with drawer\n        const layoutType = i % 4;\n        switch(layoutType){\n            case 0:\n                // Nothing to add - just an empty column\n                column.lastRow = \"open\";\n                break;\n            case 1:\n                column.doors = [\n                    {\n                        index: 0,\n                        size: {\n                            width: column.width,\n                            height: cabinetHeight\n                        },\n                        pos: {\n                            x: column.posX,\n                            y: startPosY + cabinetHeight / 2\n                        },\n                        opening: 1\n                    }\n                ];\n                column.lastRow = \"door\";\n                break;\n            case 2:\n                column.drawers = [\n                    {\n                        index: 0,\n                        size: {\n                            width: column.width,\n                            height: cabinetHeight\n                        },\n                        pos: {\n                            x: column.posX,\n                            y: startPosY + cabinetHeight / 2\n                        }\n                    }\n                ];\n                column.lastRow = \"drawer\";\n                break;\n            case 3:\n                column.isDivide = true;\n                // Create a divider at 1/3 height\n                const dividerHeight = cabinetHeight / 3;\n                column.rows = [\n                    {\n                        height: dividerHeight\n                    },\n                    {\n                        height: cabinetHeight - dividerHeight\n                    }\n                ];\n                // Add divider\n                column.dividers = [\n                    {\n                        size: {\n                            width: column.rows[0].height,\n                            depth: cabinetSize.totalDepth - 2 * _utils_utilities__WEBPACK_IMPORTED_MODULE_2__.PLATE_THICKNESS\n                        },\n                        pos: {\n                            x: column.posX,\n                            y: startPosY + column.rows[0].height / 2\n                        }\n                    }\n                ];\n                // Add drawer in bottom section\n                column.drawers = [\n                    {\n                        index: 0,\n                        size: {\n                            width: column.width,\n                            height: cabinetHeight - dividerHeight\n                        },\n                        pos: {\n                            x: column.posX,\n                            y: startPosY + dividerHeight + (cabinetHeight - dividerHeight) / 2\n                        }\n                    }\n                ];\n                column.lastRow = \"drawer\";\n                break;\n        }\n        // Move to next column position\n        currentX += column.width;\n    }\n    return gradientColumns;\n};\nconst InteriorPlates = /*#__PURE__*/ _s(react__WEBPACK_IMPORTED_MODULE_3___default().memo(_c = _s(function InteriorPlates() {\n    _s();\n    const { cabinetSize, cabinetLegs, cabinetColumns, cabinetStyle, setCabinetColumns, selectedStyle } = (0,_store__WEBPACK_IMPORTED_MODULE_1__.useCabinetStore)();\n    // Reference to track initial load\n    const isInitialLoadRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(true);\n    // Reference to track previous style to detect style changes\n    const prevStyleRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(cabinetStyle);\n    // Reference to track previous column count\n    const prevColumnCountRef = (0,react__WEBPACK_IMPORTED_MODULE_3__.useRef)(0);\n    const { verticals, horizontals, backsides, availableSpaces } = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(()=>{\n        const legHeight = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getBottomHeight)(cabinetLegs);\n        const { totalHeight, totalWidth, totalDepth } = cabinetSize;\n        return (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getPartitonPlates)({\n            columns: cabinetColumns,\n            totalHeight,\n            totalWidth,\n            totalDepth,\n            legHeight\n        });\n    }, [\n        cabinetColumns,\n        cabinetSize,\n        cabinetLegs\n    ]);\n    const getColumns = (current, cabinetSize, cabinetStyle, cabinetLegs)=>{\n        const legHeight = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getBottomHeight)(cabinetLegs);\n        return (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getCalculatedColumns)({\n            current,\n            cabinetStyle,\n            cabinetSize,\n            legHeight\n        });\n    };\n    // Handle initial load and style changes - apply random layouts\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        // Only run this effect on initial load or when style changes\n        if (isInitialLoadRef.current || prevStyleRef.current !== cabinetStyle) {\n            let current = [];\n            // If we have existing columns and only the style changed, preserve column structure\n            if (cabinetColumns.length > 0 && !isInitialLoadRef.current) {\n                current = [\n                    ...cabinetColumns\n                ];\n            }\n            const newColumns = getColumns(current, cabinetSize, cabinetStyle, cabinetLegs);\n            const legHeight = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getBottomHeight)(cabinetLegs);\n            // Apply random layouts - ONLY on initial load or style change\n            const randomizedColumns = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.applyRandomLayoutsToColumns)(newColumns, cabinetSize.totalHeight, legHeight);\n            setCabinetColumns(randomizedColumns);\n            // Update refs\n            isInitialLoadRef.current = false;\n            prevStyleRef.current = cabinetStyle;\n            prevColumnCountRef.current = randomizedColumns.length;\n        }\n    }, [\n        cabinetStyle,\n        cabinetSize.totalHeight\n    ]);\n    // Handle resize operations - preserve layouts\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        // Skip on initial load or style changes (that's handled by the other effect)\n        if (!isInitialLoadRef.current && prevStyleRef.current === cabinetStyle && cabinetColumns.length > 0) {\n            // Preserve existing column structure but update dimensions\n            const current = [\n                ...cabinetColumns\n            ];\n            const newColumns = getColumns(current, cabinetSize, cabinetStyle, cabinetLegs);\n            // Check if we have more columns than before (width increased)\n            if (newColumns.length > prevColumnCountRef.current) {\n                const legHeight = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getBottomHeight)(cabinetLegs);\n                // Get the existing columns with updated dimensions\n                const existingColumns = newColumns.slice(0, prevColumnCountRef.current);\n                // Get only the new columns\n                const newColumnsToAdd = newColumns.slice(prevColumnCountRef.current);\n                // Apply random layouts ONLY to the new columns\n                const randomizedNewColumns = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.applyRandomLayoutsToColumns)(newColumnsToAdd, cabinetSize.totalHeight, legHeight);\n                // Combine existing columns with randomized new columns\n                const finalColumns = [\n                    ...existingColumns,\n                    ...randomizedNewColumns\n                ];\n                // Update state and reference\n                setCabinetColumns(finalColumns);\n                prevColumnCountRef.current = finalColumns.length;\n            } else {\n                // When no new columns added, just use the standard resize logic\n                setCabinetColumns(newColumns);\n                prevColumnCountRef.current = newColumns.length;\n            }\n        }\n    }, [\n        cabinetSize,\n        cabinetLegs\n    ]);\n    // Apply style changes when style is selected\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        if (selectedStyle === \"gradient\") {\n            // Apply gradient style to columns\n            const gradientColumns = applyGradientStyle(cabinetColumns, cabinetSize, cabinetLegs);\n            setCabinetColumns(gradientColumns);\n        }\n    }, [\n        selectedStyle,\n        cabinetColumns.length,\n        cabinetSize,\n        cabinetLegs,\n        setCabinetColumns\n    ]);\n    // Existing useEffect for cabinet size changes\n    (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(()=>{\n        // Skip on initial load or style changes (that's handled by the other effect)\n        if (!isInitialLoadRef.current && prevStyleRef.current === cabinetStyle && cabinetColumns.length > 0) {\n            // Preserve existing column structure but update dimensions\n            const current = [\n                ...cabinetColumns\n            ];\n            const newColumns = getColumns(current, cabinetSize, cabinetStyle, cabinetLegs);\n            // If gradient style is selected, reapply it after size changes\n            if (selectedStyle === \"gradient\") {\n                const gradientColumns = applyGradientStyle(newColumns, cabinetSize, cabinetLegs);\n                setCabinetColumns(gradientColumns);\n                prevColumnCountRef.current = gradientColumns.length;\n                return;\n            }\n            // Check if we have more columns than before (width increased)\n            if (newColumns.length > prevColumnCountRef.current) {\n                const legHeight = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.getBottomHeight)(cabinetLegs);\n                // Get the existing columns with updated dimensions\n                const existingColumns = newColumns.slice(0, prevColumnCountRef.current);\n                // Get only the new columns\n                const newColumnsToAdd = newColumns.slice(prevColumnCountRef.current);\n                // Apply random layouts ONLY to the new columns\n                const randomizedNewColumns = (0,_utils_utilities__WEBPACK_IMPORTED_MODULE_2__.applyRandomLayoutsToColumns)(newColumnsToAdd, cabinetSize.totalHeight, legHeight);\n                // Combine existing columns with randomized new columns\n                const finalColumns = [\n                    ...existingColumns,\n                    ...randomizedNewColumns\n                ];\n                // Update state and reference\n                setCabinetColumns(finalColumns);\n                prevColumnCountRef.current = finalColumns.length;\n            } else {\n                // When no new columns added, just use the standard resize logic\n                setCabinetColumns(newColumns);\n                prevColumnCountRef.current = newColumns.length;\n            }\n        }\n    }, [\n        cabinetSize,\n        cabinetLegs,\n        selectedStyle\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"group\", {\n        dispose: null,\n        children: [\n            verticals.slice(1, verticals.length - 1).map((e, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_VerticalPlate__WEBPACK_IMPORTED_MODULE_11__.VerticalPlate, {\n                    rowIndex: e.row,\n                    columnIndex: e.col,\n                    position: e.position,\n                    scale: e.scale\n                }, index, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                    lineNumber: 325,\n                    columnNumber: 9\n                }, this)),\n            availableSpaces.map((e, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_SpacePlane__WEBPACK_IMPORTED_MODULE_8__.SpacePlane, {\n                    rowIndex: e.row,\n                    columnIndex: e.col,\n                    position: e.position,\n                    scale: e.scale\n                }, index, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                    lineNumber: 328,\n                    columnNumber: 9\n                }, this)),\n            horizontals.map((e, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_MiddlePlate__WEBPACK_IMPORTED_MODULE_7__.MiddlePlate, {\n                    rowIndex: e.row,\n                    columnIndex: e.col,\n                    position: e.position,\n                    scale: e.scale\n                }, index, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                    lineNumber: 331,\n                    columnNumber: 9\n                }, this)),\n            backsides.map((e, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_BackPanel__WEBPACK_IMPORTED_MODULE_4__.BackPanel, {\n                    rowIndex: e.row,\n                    columnIndex: e.col,\n                    position: e.position,\n                    scale: e.scale\n                }, index, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                    lineNumber: 334,\n                    columnNumber: 9\n                }, this)),\n            cabinetColumns.map((column, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"group\", {\n                    children: [\n                        column.doors.map((door, doorIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_Door__WEBPACK_IMPORTED_MODULE_5__.Door, {\n                                door: door,\n                                columnIndex: index\n                            }, doorIndex, false, {\n                                fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                                lineNumber: 339,\n                                columnNumber: 13\n                            }, this)),\n                        column.drawers.map((drawer, drawerIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_Drawer__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                drawer: drawer,\n                                columnIndex: index\n                            }, drawerIndex, false, {\n                                fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                                lineNumber: 342,\n                                columnNumber: 13\n                            }, this)),\n                        column.dividers.map((divider, dividerIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_VerticalDivider__WEBPACK_IMPORTED_MODULE_10__.VerticalDivider, {\n                                divider: divider\n                            }, dividerIndex, false, {\n                                fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                                lineNumber: 345,\n                                columnNumber: 13\n                            }, this))\n                    ]\n                }, index, true, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                    lineNumber: 337,\n                    columnNumber: 9\n                }, this)),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_Tools__WEBPACK_IMPORTED_MODULE_9__.Dimensions, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                lineNumber: 349,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_plates_Tools__WEBPACK_IMPORTED_MODULE_9__.EditTools, {}, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n                lineNumber: 350,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\delivery\\\\delivery\\\\src\\\\sections\\\\scene\\\\cabinet-plates\\\\InteriorPlates.tsx\",\n        lineNumber: 323,\n        columnNumber: 5\n    }, this);\n}, \"05LMWdBMCNoy1Jr8iMAEb0eyoAA=\", false, function() {\n    return [\n        _store__WEBPACK_IMPORTED_MODULE_1__.useCabinetStore\n    ];\n})), \"05LMWdBMCNoy1Jr8iMAEb0eyoAA=\", false, function() {\n    return [\n        _store__WEBPACK_IMPORTED_MODULE_1__.useCabinetStore\n    ];\n});\n_c1 = InteriorPlates;\nvar _c, _c1;\n$RefreshReg$(_c, \"InteriorPlates$React.memo\");\n$RefreshReg$(_c1, \"InteriorPlates\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/sections/scene/cabinet-plates/InteriorPlates.tsx\n"));

/***/ })

});